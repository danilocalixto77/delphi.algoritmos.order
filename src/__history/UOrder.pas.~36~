unit UOrder;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, System.StrUtils;

type
  TForm1 = class(TForm)
    Button1: TButton;
    EditNumeros: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    RadioGroup1: TRadioGroup;
    Memo1: TMemo;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    function OrderBubbleSort(var arrNumeros : TArray<Integer>): TArray<Integer>;
    function ObterNumeros(var strValores : String) : TArray<Integer>;
  end;
var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
var
  arriNums : TArray<Integer>;
  strTexto : String;
begin
   strTexto := EditNumeros.Text;
   if RadioGroup1.ItemIndex = 0 then
   begin
     arriNums := ObterNumeros(strTexto);
     OrderBubbleSort(arriNums);
   end;
end;

function TForm1.ObterNumeros(var strValores : String) : TArray<Integer>;
//Usar a função SplitString para separar os números (System.StrUtils)
var
  arrsNumeros : TArray<String>;
  I: Integer;
begin
  arrsNumeros := SplitString(strValores, ',');

  SetLength(Result, length(arrsNumeros));

  for I := 0 to length(arrsNumeros) -1 do
    Result[I] := StrToInt(arrsNumeros[I])
end;

function TForm1.OrderBubbleSort(var arrNumeros: TArray<Integer>): TArray<Integer>;
var
  I, intTamanho, intVlAnterior : Integer;
  J, K: Integer;
  booOrdenou : Boolean;
begin
  booOrdenou := False;
  while booOrdenou = False do
  begin
    intTamanho := length(arrNumeros);
    setLength(Result, intTamanho);

    for I := 0 to (intTamanho-1) do
    begin
        Memo1.Lines.Add('Numero de I sendo analisado: '+ IntToStr(i)+' Valor: '+ IntTostr(arrNumeros[i]));
        if (arrNumeros[i] > arrNumeros[i+1]) and (arrNumeros[i+1] < intTamanho) then
        begin
          intVlAnterior := arrNumeros[I];
          arrNumeros[I] := arrNumeros[I+1];
          arrNumeros[I+1] := intVlAnterior;
          booOrdenou := False;
        end
        else
          booOrdenou := True;
    end;

    for K := 0 to (intTamanho-1) do
      //Result[K] := arrNumeros[K];
      Result[K] := 0;
  end;
end;

end.
